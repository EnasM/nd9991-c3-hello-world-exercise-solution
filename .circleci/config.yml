
version: 2.1
commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
            name: Destroy environment
            command: |
              aws cloudformation delete-stack --stack-name enascloud5
            when: on_fail

jobs:
  say-hello:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"



  savePublicIdtoCache:
    docker:
      - image: cimg/aws:2022.11
    steps:
      - checkout
      # - run: 
      #     command: "sudo aws configure  AWS Access Key ID [None]: AKIA3X3QLJ7Z2QDVMYMH  AWS Secret Access Key [None]: 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   Default region name [None]: us-east-1  Default output format [None]: json"
      #     no_output_timeout: 3m
      - run:
          name: "print Instance publicIp"
          command: "sudo aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --filters 'Name=tag:Project,Values=udacity' --output text >> inventory --region us-east-1"
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy --template-file template.yml --stack-name "${CIRCLE_WORKFLOW_ID}" --region us-east-1 
        - run: return 1
        - destroy_environment

  configure_infrastructure: 
      docker:
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - add_ssh_keys:
                # You can get this ID in the section where you registered the SSH Key
                fingerprints: ["84:ac:a5:5b:c7:7a:51:75:f4:2f:52:4f:f9:14:85:0c"] 
        - run:
            name: Install Ansible
            command: |
              apk add --update ansible
        - run:
            name: Run Playbook and Configure server
            command: |
              ansible-playbook -i inventory main-remote.yml
  smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run: apk add --update curl
        - run:
            name: smoke test
            command: |
              URL="https://blog.udacity.com/"
              # Test if website exists
              if curl -s --head ${URL} 
              then
                return 0
              else
                return 1
              fi
 
  create_and_deploy_front_end:
      docker:
      - image: amazon/aws-cli
      steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy --template-file bucket.yml --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
      # Uncomment the step below if yoou wish to upload all contents of the current directory to the S3 bucket
        - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --delete

  get_last_deployment_id:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run: yum install -y tar gzip
        - run:
            name: Fetch and save the old pipeline ID (bucket name) responsible for the last release.
            command: |
              aws cloudformation  list-exports --query "Exports[?Name==\`PipelineID\`].Value" --no-paginate --output text > ~/textfile.txt
        - persist_to_workspace:
            root: ~/
            paths: 
              - textfile.txt 

  promote_to_production:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Execute cloudfront.yml
            command: |
              aws cloudformation deploy  --template-file cloudfront.yml --stack-name production-distro --parameter-overrides PipelineID="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"

  clean_up_old_front_end:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run: yum install -y tar gzip
        - attach_workspace:
            at: ~/
        - run:
            name: Destroy the previous S3 bucket and CloudFormation stack. 
            # Use $OldBucketID environment variable or mybucket644752792305 below.
            # Similarly, you can create and use $OldStackID environment variable in place of production-distro 
            command: |
              export OldBucketID=$(cat ~/textfile.txt)
              aws s3 rm "s3://${OldBucketID}" --recursive


workflows:
  my-workflow:
    jobs:
      # - savePublicIdtoCache
        # - create_infrastructure
        # - configure_infrastructure
          - create_and_deploy_front_end
          - promote_to_production:
              requires: 
                - create_and_deploy_front_end
          - get_last_deployment_id
          - clean_up_old_front_end:
              requires:
                - get_last_deployment_id
                - promote_to_production

# VS Code Extension Version: 1.5.1